{"baseLocation":{"method":"fetch","version":"v1","params":{"url":"/v1/base-python-django/sandbox.json"}},"nodes":[{"id":"/requirements.txt","parent":null,"type":"ini","text":"requirements.txt"},{"id":"/myproject","parent":null,"type":"folder","text":"myproject"},{"id":"/myproject/__init__.py","parent":"/myproject","type":"python","text":"__init__.py"},{"id":"/myproject/settings.py","parent":"/myproject","type":"python","text":"settings.py"},{"id":"/myproject/urls.py","parent":"/myproject","type":"python","text":"urls.py"},{"id":"2195ac2a-bade-40cd-9688-5eb29877da54","parent":null,"type":"folder","text":"templates"},{"id":"37db6fdf-0707-4fc5-a9ec-e95d58b97423","parent":"2195ac2a-bade-40cd-9688-5eb29877da54","type":"html","content":"","text":"index.html"},{"id":"00a1f527-c69c-4e60-a91c-53690e7a823b","parent":null,"type":"folder","text":"static"},{"id":"5f7d8154-0e0d-4c77-8731-187acb7cd2da","parent":"00a1f527-c69c-4e60-a91c-53690e7a823b","type":"css","content":"","text":"styles.css"},{"id":"17b85f16-53f1-4961-a81e-d80896b33940","parent":"2195ac2a-bade-40cd-9688-5eb29877da54","type":"html","content":"","text":"click.html"},{"id":"91f8d638-6aeb-4338-a5f7-8fe139a4ac7a","parent":null,"type":"ini","content":"","text":".env"},{"id":"10cb1d96-192a-4204-9f5f-fe80d3c868a2","parent":null,"type":"python","content":"","text":"setup.py"}],"viewNode":"10cb1d96-192a-4204-9f5f-fe80d3c868a2","openNodes":["10cb1d96-192a-4204-9f5f-fe80d3c868a2","/myproject/settings.py","/myproject/urls.py"],"nodeContents":{"/requirements.txt":"Django==5.0.2\nsqlite3\ntzdata","/myproject/__init__.py":"","/myproject/settings.py":"\nfrom pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = 'django-insecure-rl4c+j(*bufy1r52v5z#0wh6nvt63()2s*#_-_=03nn$&7$2#+'\n\nDEBUG = True\n\nALLOWED_HOSTS = [\"*\"]\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\n\nLOGGING = {\n    \"version\": 1,\n    \"disable_existing_loggers\": False,\n    \"handlers\": {\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n        },\n        # 'core.handlers': {\n        #     'level': 'DEBUG',\n        #     'handlers': ['console']\n        # },\n    },\n    \"root\": {\n        \"handlers\": [\"console\"],\n        \"level\": \"WARNING\",\n    },\n}\n\nROOT_URLCONF = 'myproject.urls'\n\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"OPTIONS\": {\n            'loaders': [\n                'django.template.loaders.filesystem.Loader',\n                'django.template.loaders.app_directories.Loader',\n            ],\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n            ]\n        },\n    }\n]\n\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\n\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n","/myproject/urls.py":"\nfrom django.contrib import admin\nfrom django.urls import path\nfrom django.shortcuts import render\nfrom django.conf import settings\n\ndef root(request):\n    response = render(request, \"index.html\")\n    return response\n\ndef click(request):\n    return render(request, \"click.html\")\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', root, name=\"root\"),\n    path('click', click, name=\"click\"),\n]","37db6fdf-0707-4fc5-a9ec-e95d58b97423":"{% load static %}\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heyyy</title>\n    <link rel=\"stylesheet\" href=\"{% static 'styles.css' %}\">\n    <script src=\"https://unpkg.com/htmx.org@1.9.10\"></script>\n</head>\n<body>\n    <ol>\n        <li id=\"add-more\">\n            <button\n                hx-get=\"{% url 'click' %}\"\n                hx-swap=\"beforebegin\"\n                hx-target=\"#add-more\">\n                Click to add more\n            </button>\n        </li>\n    </ol>\n    <form method=\"post\" action=\"/click\">\n        {% csrf_token %}\n        <input type=\"text\" name=\"heyy\" />\n        <input type=\"submit\" />\n    </form>\n</body>\n</html>","5f7d8154-0e0d-4c77-8731-187acb7cd2da":"\nbody {\n    background-color: black;\n    color: white;\n    font-size: 20px;\n}","17b85f16-53f1-4961-a81e-d80896b33940":"<li>Item</li>","91f8d638-6aeb-4338-a5f7-8fe139a4ac7a":"DJANGO_SETTINGS_MODULE=myproject.settings\nDJANGO_ALLOW_ASYNC_UNSAFE=true\nDJANGO_SUPERUSER_PASSWORD=password\nDJANGO_SUPERUSER_USERNAME=admin\nDJANGO_SUPERUSER_EMAIL=admin@example.com","10cb1d96-192a-4204-9f5f-fe80d3c868a2":"\nimport sys\nimport django\n\ndjango.setup()\n\nfrom django.core.management import call_command\n\ndef init():\n    from django.contrib.auth.hashers import PBKDF2PasswordHasher\n    PBKDF2PasswordHasher.iterations = 1\n    \n    call_command('makemigrations', interactive=False)\n    call_command('migrate', interactive=False)\n    call_command('createsuperuser', interactive=False)\n\n\ndef main():\n    delmodules = [\n        \"django.core.handlers.base\",\n        \"django.core.handlers.wsgi\",\n        \"django.core.handlers\",\n        \"django.core.wsgi\",\n        \"django.core\",\n        \"django.urls.resolvers\",\n        \"django.urls\",\n    ]\n\n    # for k in list(sys.modules.keys()):\n    #     if k.startswith('django.core'):\n    #         print(k)\n    #         del sys.modules[k]\n\n    for name in delmodules:\n        if name in sys.modules:\n            del sys.modules[name]\n\n    call_command('check')\n\n    from django.core.wsgi import get_wsgi_application\n    from django.contrib.staticfiles.handlers import StaticFilesHandler\n\n    application = StaticFilesHandler(get_wsgi_application())\n\n    import js\n    from io import BytesIO\n    from pyodide.ffi import to_js\n    from urllib.parse import urlparse\n\n    def handle(request):\n        url = urlparse(request.url)\n\n        environ = {\n            'SERVER_PORT': js.location.port or '443',\n            'SERVER_PROTOCOL': url.scheme,\n            'REQUEST_METHOD': request.method,\n            'PATH_INFO': url.path,\n            'QUERY_STRING': url.query,\n            **{\n                'HTTP_' + key.replace('-', '_').upper(): value\n                    for key, value in request.headers\n            },\n            'wsgi.version': (1, 0),\n            'wsgi.input': BytesIO(),\n            'wsgi.url_scheme': url.scheme,\n        }\n\n        if hasattr(request, 'body'):\n            body = BytesIO(request.body.to_py().tobytes())\n            environ['wsgi.input'] = body\n            environ['CONTENT_TYPE'] = request.contentType\n            environ['CONTENT_LENGTH'] = request.contentLength\n\n        response = application(environ, lambda a,b:...)\n\n        response_headers = [\n            *response.items(),\n            *((\"Set-Cookie\", c.output(header=\"\")) for c in response.cookies.values()),\n        ]\n\n        if hasattr(response, 'content'):\n            body = response.content\n        else:\n            body = b\"\".join(response).decode()\n\n        return to_js([body, {\n            \"status\": response.status_code,\n            \"statusText\": response.reason_phrase,\n            \"headers\": response_headers,\n        }])\n\n    js.requestHandler = handle\n    js.startclient()"},"title":"Django Example\n","readmeHTML":{}}